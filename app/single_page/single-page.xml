<Page
    navigatingTo="onNavigatingTo"  
    xmlns:nsDrawer="nativescript-pro-ui/sidedrawer"
    xmlns:myDrawer="shared/my-drawer"
    xmlns="http://schemas.nativescript.org/tns.xsd">

    <ActionBar class="action-bar">
        <!-- 
        Use the NavigationButton as a side-drawer button in Android because ActionItems are shown on the right side of the ActionBar
        -->
        <NavigationButton ios:visibility="collapsed" icon="res://menu" tap="onDrawerButtonTap"></NavigationButton>
        <!-- 
        Use the ActionItem for IOS with position set to left. Using the NavigationButton as a side-drawer button in iOS is not possible, because its function is to always navigate back in the application.
        -->
        <ActionItem icon="res://navigation/menu" 
            android:visibility="collapsed" 
            tap="onDrawerButtonTap"
            ios.position="left">
        </ActionItem>
        <Label class="action-bar-title" text="Recipe view"></Label>
    </ActionBar>

    <!--
    RadSideDrawer is a UI component part of the Progress NativeScript UI set of components.
    Learn more about the RadSideDrawer UI component and how it can be customized in this documentation article:
    http://docs.telerik.com/devtools/nativescript-ui/Controls/NativeScript/SideDrawer/getting-started
    The RadSideDrawer component is designed to be used as a root element to the <Page> and
    it shouldn't have any other siblings other than the <ActionBar> component.
    -->
    <nsDrawer:RadSideDrawer id="sideDrawer" showOverNavigation="true">
        <!--
        Use the RadSideDrawer.drawerTransition component to change the open/close animation of the drawer.
        -->
        <nsDrawer:RadSideDrawer.drawerTransition>
            <nsDrawer:SlideInOnTopTransition/>
        </nsDrawer:RadSideDrawer.drawerTransition>

        <!--
        Use the RadSideDrawer.drawerContent component to display the content of the app drawer on this page.
        Always wrap content in a layout component.
        -->
        <nsDrawer:RadSideDrawer.drawerContent>
            <StackLayout>
                <!--
                Use {N} custom components to reuse UI across your mobile app.
                The MyDrawer custom component defined in "/shared/my-drawer" holds the contents of the app drawer.
                Learn more about custom components and how they can be used in this documentation article:
                http://docs.nativescript.org/ui/basics#custom-components
                -->
                <myDrawer:MyDrawer selectedPage="Single"/>
            </StackLayout>
        </nsDrawer:RadSideDrawer.drawerContent>

        <!--
        Use the RadSideDrawer.mainContent component to display the content of the page when you have an app drawer.
        Always wrap content in a layout component.
        -->
        <nsDrawer:RadSideDrawer.mainContent>
            <GridLayout class="page-content" rows="auto,auto,*" >
                <SegmentedBar row="0" selectedIndex="{{ selectedDay }}" >
                    <SegmentedBar.items>
                        <SegmentedBarItem title="Giới thiệu" />
                        <SegmentedBarItem title="{{ 'Nguyên liệu\n' + ingredient_num}}" />
                        <SegmentedBarItem title="{{ 'Thực hiện\n' + cooking_time + ' ph'}}" />
                    </SegmentedBar.items>
                </SegmentedBar>                                            
                <GridLayout row="1"  class="over-view" rows="auto,*,*" visibility="{{ isDisp_over_view ? 'visible' : 'collapsed' }}" >
                    <Image src="{{ img_src }}" class="single-recipe-image" row="0" />
                    <Label text="{{ recipe_name }}" class="single-recipe-name" row="0" />
                    <TextView text="{{ recipe_overview }}" row="1" editable="false" backgroundColor="#f2eecb" />
                </GridLayout>
                <GridLayout row="2"  class="ingredients" rows="auto, *" visibility="{{ isDisp_ingredients ? 'visible' : 'collapsed' }}" >
                    <Label text="Nguyên liệu" row="0" class="title" />
                    <ListView items="{{ ingredients }}" row="1" id="ingredient_list" separatorColor="#00000000" itemTap="ingredient_toggle_selected" >
                        <ListView.itemTemplate>
                            <GridLayout columns="auto,*" backgroundColor="{{ selected ? '#63ff66' : '#fff' }}" >
                                <Label col="0" text="{{ selected ? '&#xf14a;' : '&#xf055;' }}" class="fa" />
                                <Label col="1" text="{{ quantity + unit_name + ' ' + name }}" />
                            </GridLayout>
                        </ListView.itemTemplate>
                    </ListView>
                </GridLayout>
                <GridLayout row="3"  class="directions" rows="auto, *" visibility="{{ isDisp_directions ? 'visible' : 'collapsed' }}" >
                    <Label text="Các bước thực hiện:" row="0" class="title" />
                    <ListView items="{{ directions }}" row="1" id="direction_list" separatorColor="#00000000" itemTap="direction_toggle_selected" >
                        <ListView.itemTemplate>
                            <GridLayout columns="auto,*" backgroundColor="{{ selected ? '#63ff66' : '#fff' }}" >
                                <Label col="0" text="{{ selected ? '&#xf14a;' : '&#xf055;' }}" class="fa" />
                                
                                <TextView text="{{ direct_order + ' ' + direction }}" row="1" editable="false" backgroundColor="#f2eecb" />
                            </GridLayout>
                        </ListView.itemTemplate>
                    </ListView>
                </GridLayout>
            </GridLayout>
        </nsDrawer:RadSideDrawer.mainContent>
    </nsDrawer:RadSideDrawer>
</Page>
